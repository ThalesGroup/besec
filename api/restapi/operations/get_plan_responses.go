// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ThalesGroup/besec/api/models"
)

// GetPlanOKCode is the HTTP code returned for type GetPlanOK
const GetPlanOKCode int = 200

/*GetPlanOK OK

swagger:response getPlanOK
*/
type GetPlanOK struct {

	/*
	  In: Body
	*/
	Payload *GetPlanOKBody `json:"body,omitempty"`
}

// NewGetPlanOK creates GetPlanOK with default headers values
func NewGetPlanOK() *GetPlanOK {

	return &GetPlanOK{}
}

// WithPayload adds the payload to the get plan o k response
func (o *GetPlanOK) WithPayload(payload *GetPlanOKBody) *GetPlanOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get plan o k response
func (o *GetPlanOK) SetPayload(payload *GetPlanOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPlanOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetPlanDefault error

swagger:response getPlanDefault
*/
type GetPlanDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPlanDefault creates GetPlanDefault with default headers values
func NewGetPlanDefault(code int) *GetPlanDefault {
	if code <= 0 {
		code = 500
	}

	return &GetPlanDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get plan default response
func (o *GetPlanDefault) WithStatusCode(code int) *GetPlanDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get plan default response
func (o *GetPlanDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get plan default response
func (o *GetPlanDefault) WithPayload(payload *models.Error) *GetPlanDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get plan default response
func (o *GetPlanDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPlanDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
